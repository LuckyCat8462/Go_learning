package main

// 流程描述：
// 		①user01发送信息“hello” ，由Listener--->Accept，监听建立连接
// 		②1号主go程（每个用户都有一个），go handler()：创建user，添加到map；将消息写入公共通道message
// 		③2号go程（全局唯一），全局广播，负责监听message，将message发送给所有的用户。
// 			遍历用户map，将全局的message发送到每个人独自的msg中
// 		④3号go程（每个用户都有一个），go writeBack()，将用户自己msg回写到终端

// 一、接收用户数据，进行相应处理
// 1.1.Listener--->Accept等待进程连接，接受连接后由1号主go程 handler()处理。
// 1.2.聊天室需要处理多个用户的数据，每个用户都需要一个独立的通道接收消息。

// 二、用户结构定义
// 2.1.定义User结构，包含message管道，用于接收和发送消息。
// 2.2.每个用户都有自己的管道，用于接收服务器广播的消息。
// 2.3.全局广播管道message用于向所有用户发送消息。

// 三、全局内容
// 3.1.全局广播管道message---2号go程
// 		3.1.1.定义全局广播管道message，用于接收服务器写入的消息。
// 		3.1.2.服务器将消息写入message管道后，广播给所有用户。
// 		3.1.3.负责向所有用户的管道发送消息。
// 3.2.全局map
// 		用于存储所有用户的ID和对应的user结构。

// 四、用户管理
// 4.1.每个连接对应一个用户，map[userid] = user ，用户信息存储在全局map中。
// 4.2.每个连接需要再启动一个3号go程：读取message管道的数据，发送给客户端。
// 4.3.用户管理包括创建用户、写入map和读取消息等操作。
